<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.3.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">
	<!-- 讀取db.properties -->
		<!-- 讀取db.properties -->
		<context:property-placeholder location="classpath:db.properties"/>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg>
			<bean class="com.zaxxer.hikari.HikariConfig">
				<property name="poolName" value="HikariDataSource" />
				<property name="driverClassName" value="${jdbc.driver}" />
				<property name="jdbcUrl" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
				<property name="autoCommit" value="false" />
				<property name="connectionTimeout" value="30000" />
				<property name="idleTimeout" value="600000" />
				<property name="maxLifetime" value="1800000" />

				<property name="maximumPoolSize" value="500" />
				<property name="minimumIdle" value="1" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- 配置數據管理器,依賴於數據源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 開啟注解 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- 配置MyBatis -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</bean>
	<!-- public class mybatis { private static SqlSessionFactory sqlSessionFactory=null; 
		static{ try { String resource="mybatis-config.xml"; InputStream inputStream=Resources.getResourceAsStream(resource); 
		sqlSessionFactory=new SqlSessionFactoryBuilder().build(inputStream); }catch(Exception 
		e) { e.printStackTrace(); } } public static SqlSession getSession() { return 
		sqlSessionFactory.openSession(); } } -->

	<!-- 配置mapper掃描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer ">
		<property name="basePackage" value="com.ssm.dao" />
	</bean>

	<!-- 掃描 -->
	<context:component-scan
		base-package="com.ssm.service" />
</beans>		